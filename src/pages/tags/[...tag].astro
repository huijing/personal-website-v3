---
import BaseLayout from "@/layouts/BaseLayout.astro";
import "@/styles/pages.css";
import TagCloud from "@/components/TagCloud.astro";
import { slugify } from "@/utils"
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const posts = await getCollection("blog",  ({ data }) => {
    return import.meta.env.PROD ? data.draft !== true : true;
  });

  const slugToTag = new Map();
  for (const post of posts) {
    for (const tag of post.data.tags ?? []) {
      const slug = slugify(tag);
      if (!slugToTag.has(slug)) slugToTag.set(slug, tag);
    }
  }

  return Array.from(slugToTag.entries()).map(([slug, originalTag]) => ({
    params: { tag: slug },
    props: { originalTag },
  }));
}

const { originalTag } = Astro.props;

const posts = await getCollection("blog");
const taggedPosts = posts
  .filter((post) => (post.data.tags ?? []).includes(originalTag))
  .sort((a, b) => +new Date(b.data.date) - +new Date(a.data.date));

const postsByYear = taggedPosts.reduce(
  (acc, post) => {
    const year = new Date(post.data.date).getFullYear();
    if (!acc[year]) acc[year] = [];
    acc[year].push(post);
    return acc;
  },
  {} as Record<number, typeof taggedPosts>
);

const grouped = Object.entries(postsByYear)
  .map(([year, posts]) => ({
    year: Number(year),
    posts: posts.sort((a, b) => +new Date(b.data.date) - +new Date(a.data.date)),
  }))
  .sort((a, b) => b.year - a.year);
---

<BaseLayout title={`Posts tagged "${originalTag}"`}>
  <main>
    <header class="page-header">
      <span class="icon icon--title">
        <svg viewBox="0 0 544 512">
          <path d="M496,32H384c-26.4,0-63.273,15.273-81.941,33.941L113.941,254.059c-18.667,18.667-18.667,49.214,0,67.882l140.118,140.115 c18.667,18.668,49.214,18.668,67.882,0l188.115-188.115C528.727,255.273,544,218.4,544,192V80C544,53.6,522.4,32,496,32z M432,192 c-26.51,0-48-21.49-48-48s21.49-48,48-48s48,21.49,48,48S458.51,192,432,192z"/></svg>
        </span>
      <h2 class="tag-title">{originalTag}</h2>
    </header>

    <TagCloud />

    {
      grouped.length === 0 ? (
        <p>No posts yet.</p>
      ) : (
        grouped.map(({ year, posts }) => (
          <span class="post-meta">{year}</span>
          <ul class="post-list">
            {posts.map((post) => (
              <li class="no-list-style no-margin post-item">
                {post.data.external_url ? 
                  <a class={`external-url no-underline ${post.data.external_site}`} href={post.data.external_url}>{post.data.title}</a> : 
                  <a class="no-underline" href={`/blog/${post.id}/`}>{post.data.title}</a>
                }
              </li>
            ))}
          </ul>
        ))
      )
    }
  </main>
</BaseLayout>

<style>
  .tag-title {
    display: inline-block;
    vertical-align: middle;
    margin-inline-start: 0.25em;
  }
</style>
